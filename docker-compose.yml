version: "3"
services:
  db:
    image: mysql:8.0
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - app-db-data:/var/lib/mysql
    deploy:
      placement:
        constraints:
          - node.role == manager
    restart: always
    networks:
      - main

  backend:
    build:
      context: ./backend
    env_file:
      - .env
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - PROJECT_NAME=${PROJECT_NAME}
      - SECRET_KEY=${SECRET_KEY?Variable not set}
      - DATABASE_URL=mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE}
    restart: always
    platform: linux/amd64
    deploy:
      replicas: ${BACKEND_INSTANCES}
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == worker
    depends_on:
      - db
    networks:
      - main

  nginx:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 80:80
    restart: always
    depends_on:
      - backend
    environment:
      - DOMAIN=${DOMAIN}
    deploy:
      placement:
        constraints:
          - node.role == manager
    networks:
      - main

volumes:
  app-db-data:

networks:
  main:
